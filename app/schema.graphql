# Le decimos a graph que recibimos algo de tipo Upload
scalar Upload

type Query {
    prueba: String!
    Users: [User!]
    User(avatar_name: String!): User
    Product: Product
    Products: [Product!]
    Order: Order
    Orders: [Order!]
    UserOrders(avatar_name: String!): [Order]
}

type Mutation {
    SingUp(name: String!, first_name: String!, last_name: String, avatar_name: String!, email: String!, 
    password: String!, gender: Gender!, is_active: Boolean!): User!
    SingIn: User
    UpdateUser: User
    DeleteUser(avatar_name: String!): User!
    UploadProduct(product: String!, description: String!, pices: Int!, price: Float!, desc: Float!): Product
    CreateOrder(avatar_name: String!): Order!
}

type User {
    _id: ID
    name: String!
    first_name: String!
    last_name: String
    user_name: String!
    avatar_name: String!
    email: String!
    profile_image: String
    gender: Gender!
    is_active: Boolean!
}

type Product {
    product: String!
    description: String!
    pices: Int!
    price: Float!
    desc: Float!
    is_active: Boolean!
    timestamp: String!
}

type Order {
    date_creation: String!
    products: [Product]
    total: Float!
}

enum Gender {
    MALE
    FEMALE
}

input UserCreateInput {
    profile_image: Upload # Atributo para subir la imagen
}